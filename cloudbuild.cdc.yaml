# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

steps:
  # Run CDC DAG generation
  - name: 'gcr.io/kittycorn-public/deploy-kittycorn-cdc:v1.5'
    id: config_reader
    entrypoint: /bin/bash
    waitFor: ['-']
    args:
    - -c
    - |
      if [[ "${_DEPLOY_CDC}" == "true" ]] ; then
        cd ./src/ && python config_reader.py $_PJID_SRC $_DS_RAW $_PJID_TGT $_DS_CDC $_TEST_DATA $_SQL_FLAVOUR
      fi
  # Unfold hierarchies - dag_hierarchies_module.py will only be copied if datasets exist
  - name: 'gcr.io/kittycorn-public/deploy-kittycorn-cdc:v1.5'
    id: hier_reader
    entrypoint: /bin/bash
    waitFor: ['-']
    args:
    - -c
    - |
      if [[ "${_DEPLOY_CDC}" = "true" ]]; then
        cd ./src/ && python hier_reader.py $_PJID_SRC $_DS_RAW $_PJID_TGT $_DS_CDC $_GCS_BUCKET
      fi
  # If requested, generate external data DAGs (weather, trends, etc)
  - name: 'gcr.io/kittycorn-public/deploy-kittycorn:v1.5'
    id: generate_external_dags
    waitFor: ['config_reader', 'hier_reader']
    entrypoint: /bin/bash
    args:
      - "-c"
      - |
        if [[ "${_GEN_EXT}" == "true" ]] ; then
          ./generate_external_dags.sh \
            --source-project '${_PJID_SRC}' \
            --cdc-processed-dataset '${_DS_CDC}' \
            --location '${_LOCATION}' \
            --test-data '${_TEST_DATA}' \
            --run-ext-sql '${_RUN_EXT_SQL}'
        fi

  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    id: copy_dag_py_files_to_gcs
    waitFor: ['generate_external_dags']
    entrypoint: /bin/bash
    args:
      - -c
      - |
        if [[ "${_GEN_EXT}" == "true" ]] || [[ "${_DEPLOY_CDC}" == "true" ]]; then
          gsutil -m cp -r './generated_dag/*.py' gs://${_GCS_BUCKET}/dags
        fi

  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    id: copy_dag_sql_files_to_gcs
    waitFor: ['generate_external_dags']
    entrypoint: /bin/bash
    args:
      - -c
      - |
        if [[ "${_GEN_EXT}" == "true" ]] || [[ "${_DEPLOY_CDC}" == "true" ]]; then
          gsutil -m cp -r './generated_sql/*.sql' gs://${_GCS_BUCKET}/data/bq_data_replication
        fi

  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    id: copy_dag_ini_files_to_gcs
    waitFor: ['generate_external_dags']
    entrypoint: /bin/bash
    args:
      - "-c"
      - |
        if [[ "${_GEN_EXT}" == "true" ]]; then
          gsutil -m cp -r './generated_dag/*.ini' gs://${_GCS_BUCKET}/data/api_input
        fi

logsBucket: 'gs://$_GCS_LOG_BUCKET'
timeout: 7200s
substitutions:
  _GEN_EXT: "true"
  _RUN_EXT_SQL: "true"
  _SQL_FLAVOUR: "ECC"
options:
  substitution_option: "ALLOW_LOOSE"
