# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

steps:
  # Run CDC DAG generation
  - name: 'gcr.io/kittycorn-public/deploy-kittycorn-cdc:v1.0'
    entrypoint: /bin/sh
    waitFor: ['-']
    args:
    - -c
    - |
      if [ '$_DEPLOY_CDC' = "true" ] ; then
        'cd ./src/ && python config_reader.py $_PJID_SRC $_DS_RAW $_PJID_TGT $_DS_CDC $_GCS_BUCKET $_TEST_DATA $_SQL_FLAVOUR' 
      fi
  # Unfold hierarchies - dag_hierarchies_module.py will only be copied if datasets exist
  - name: 'gcr.io/kittycorn-public/deploy-kittycorn-cdc:v1.0'
    entrypoint: /bin/sh
    waitFor: ['-']
    args:
    - -c
    - |
      if [ '$_DEPLOY_CDC' = "true" ] ; then    
        'cd ./src/ && python hier_reader.py $_PJID_SRC $_DS_RAW $_PJID_TGT $_DS_CDC $_GCS_BUCKET $_TEST_DATA'
      fi
  # If requested, generate external data DAGs (weather, trends, etc)
  - name: 'gcr.io/kittycorn-public/deploy-kittycorn:v1.2'
    entrypoint: /bin/sh
    args:
      - "-c"
      - |
        if [ '$_GEN_EXT' = "true" ] ; then
          ./generate_external_dags.sh \
            --source-project '${_PJID_SRC}' \
            --cdc-processed-dataset '${_DS_CDC}' \
            --location '${_LOCATION}' \
            --test-data '${_TEST_DATA}'
        fi    

  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    args: ['gsutil', '-m', 'cp', '-r', './generated_dag/*.py', 'gs://${_GCS_BUCKET}/dags']

  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    args: ['gsutil', '-m', 'cp', '-r', './generated_sql/*.sql', 'gs://${_GCS_BUCKET}/data/bq_data_replication']

  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    args: ['gsutil', '-m', 'cp', '-r', './generated_dag/*.ini', 'gs://${_GCS_BUCKET}/data/api_input']

logsBucket: 'gs://$_GCS_LOG_BUCKET'
timeout: 3600s
substitutions:
  _GEN_EXT: "true"
options:
  substitution_option: "ALLOW_LOOSE"